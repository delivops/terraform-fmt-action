name: 'delivops-github-action-terraform-fmt'
description: 'Runs terraform fmt and pushes changes to the source branch.'
author: 'delivops'
branding:
  icon: 'cloud'
  color: 'purple'

inputs:
  working_directory:
    description: 'Directory containing Terraform configuration'
    required: true
  aws_region:
    description: 'AWS Region'
    required: true
  aws_role:
    description: 'AWS Role to assume for authentication'
    required: true
  terraform_version:
    description: 'Terraform version to install'
    required: false
    default: '1.9.8'
  aws_account_id:
    required: true
  github_token:
    description: 'GitHub token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}"
        aws-region: ${{ inputs.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}

    - name: Terraform fmt
      run: terraform fmt -recursive
      shell: bash
      working-directory: ${{ inputs.working_directory }}

    - name: Commit and Push changes
      shell: bash
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "chore(terraform): auto-fmt via GitHub Action"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
